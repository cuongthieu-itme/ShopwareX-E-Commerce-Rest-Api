// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopwareX.DataContext;

#nullable disable

namespace ShopwareX.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250509111304_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ShopwareX.Entities.Gender", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(170)
                        .HasColumnType("varchar(170)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("genders", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 9, 15, 13, 3, 34, DateTimeKind.Local).AddTicks(763),
                            IsDeleted = false,
                            Name = "Male"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 9, 15, 13, 3, 34, DateTimeKind.Local).AddTicks(783),
                            IsDeleted = false,
                            Name = "Female"
                        });
                });

            modelBuilder.Entity("ShopwareX.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(170)
                        .HasColumnType("varchar(170)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 9, 15, 13, 3, 34, DateTimeKind.Local).AddTicks(8005),
                            IsDeleted = false,
                            Name = "Super Admin"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 9, 15, 13, 3, 34, DateTimeKind.Local).AddTicks(8015),
                            IsDeleted = false,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 5, 9, 15, 13, 3, 34, DateTimeKind.Local).AddTicks(8017),
                            IsDeleted = false,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("ShopwareX.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(170)
                        .HasColumnType("varchar(170)")
                        .HasColumnName("full_name");

                    b.Property<long>("GenderId")
                        .HasColumnType("bigint")
                        .HasColumnName("gender_id");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hashed_password");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("role_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.HasIndex("RoleId");

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 5, 9, 15, 13, 3, 199, DateTimeKind.Local).AddTicks(1210),
                            Email = "super.admin@example.com",
                            FullName = "Super Admin",
                            GenderId = 1L,
                            HashedPassword = "$2a$11$BLgnjqwirV.7woRYI9grg.0QF/bTteHZUFtO8Yjg2FAUTbnKdC.Ii",
                            IsDeleted = false,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 5, 9, 15, 13, 3, 358, DateTimeKind.Local).AddTicks(6390),
                            Email = "admin@example.com",
                            FullName = "Admin",
                            GenderId = 1L,
                            HashedPassword = "$2a$11$r5WulxO4lyU1kajrs30/PObaZPZOn9Vz7EVVhusdWdn2tNbN/20ly",
                            IsDeleted = false,
                            RoleId = 2L
                        });
                });

            modelBuilder.Entity("ShopwareX.Entities.User", b =>
                {
                    b.HasOne("ShopwareX.Entities.Gender", "Gender")
                        .WithMany("Users")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopwareX.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ShopwareX.Entities.Gender", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ShopwareX.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
